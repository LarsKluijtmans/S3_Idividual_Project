{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lars\\\\Desktop\\\\ict\\\\sem3\\\\IT\\\\Week4\\\\myfirstreact\\\\src\\\\Count.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Counter() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count < 10 ? count + 1 : 10),\n      children: \" +1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count >= 0 ? count + 1 : 0),\n      children: \" -1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/lars/Desktop/ict/sem3/IT/Week4/myfirstreact/src/Count.js"],"names":["React","useState","Counter","count","setCount"],"mappings":";;;AACI,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,SAASC,OAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AAEA,sBACA;AAAA,4BACI;AAAA,sBAAME,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,EAAR,GAAaA,KAAK,GAAC,CAAnB,GAAuB,EAAxB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,IAAI,CAAT,GAAaA,KAAK,GAAC,CAAnB,GAAuB,CAAxB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADA;AAOH;;GAVQD,O;;KAAAA,O","sourcesContent":["\r\n    import React, {useState} from 'react';\r\n\r\n    function Counter () {\r\n        const [count, setCount] = useState(0)\r\n\r\n        return(\r\n        <>\r\n            <h2> {count} </h2>\r\n            <button onClick={() => setCount(count < 10 ? count+1 : 10)}> +1 </button>\r\n            <button onClick={() => setCount(count >= 0 ? count+1 : 0)}> -1 </button>\r\n        </>\r\n        )\r\n    }"]},"metadata":{},"sourceType":"module"}